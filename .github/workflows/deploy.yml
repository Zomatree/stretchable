name: Build and Publish Python Package

on:
  workflow_dispatch
  # release:
  #   types: [published]

permissions:
  contents: read

jobs:
  # TODO: get version from tag, prepare Cargo.toml with version number

  build:
    strategy:
      matrix:
        version: ["3.11"] # ["3.7", "3.8", "3.9", "3.10", "3.11"]
        platform: [win, linux, mac_x64, mac_arm]
        include:
          - platform: win
            os: windows-latest
            target: "x86_64-pc-windows-msvc"
          - platform: linux
            os: ubuntu-latest
            target: "x86_64-unknown-linux-gnu"
          - platform: mac_x64
            os: macos-latest
            target: "x86_64-apple-darwin"
          - platform: mac_arm
            os: macos-latest
            target: "aarch64-apple-darwin"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "maturin>=1.1,<2.0" build
      # TODO: update Cargo.toml with version from tag
      - name: Build package
        run: python -m build --config-setting build-args=--target=${{ matrix.target }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.platform }}-${{ matrix.version }}
          path: dist/

  publish:
    name: upload release to PyPI
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: temp/
      - name: Copy all artifacts to dist
        shell: bash
        run: |
          mkdir dist
          mv temp/*/**/* dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
